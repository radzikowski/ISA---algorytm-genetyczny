{% extends base %}


{% block content %}




<div>
<h2>Zadanie:</h2>
Znaleźć maksimum funkcji: F(x)= (x MOD 1) * (COS( 20 * π * x) – SIN(x)) w przedziale &lt;-4; 12&gt;,
z dokładnością 0,001 (10-3).
</div>
<br>
<br>

<form action="" type="POST">
<div class="left">
	<div class="">Podaj przedział rozwiązań [a,b]:</div>
	<div class="a-value"><label>Wpisz a:</label><input name="a-value" type="text" value="{{a}}" class="width-50"></div>
	<div class="b-value"><label>Wpisz b:</label><input name="b-value" type="text" value="{{b}}" class="width-50"></div>

	<div class="clearfix"></div>
	<div class="precision-value "><label>Podaj dokładność rozwiązania (ilość liczb po przecinku):</label><input name="precision-value" type="text" value="{{ precision}}" class="width-50"></div>
	<div class="n-value "><label>Podaj rozmiar populacji:</label><input name="population-value" type="text" value="{{ population }}" class="width-50"></div>

</div>
<div class="left">
	<div class="calc"><input id="calculate" type="submit" value="Oblicz" /></div>
</div>
</form>
	<div class="clearfix"></div>

	
	<div class="clearfix"></div>
	<br>
	<br>
	
{#	<table border="1" id="result-tab">
		<tbody>
			<tr>
				<th>Lp.</th>
				<th>x-real</th>
				<th>x-int</th>
				<th>x-bin</th>
				<th>f(x-real) - funkcja oceny</th>
			</tr>
			{% for result in results %}
			<tr>
				<td>{{ loop.index }}</td>
				<td>{{ result.xreal }}</td>
				<td>{{ result.xint }}</td>
				<td>{{ result.xbin }}</td>
				<td>{{ result.eval_func }}</td>
			</tr>
			{% endfor %}
		</tbody>
	</table>
#}
</div>
{% endblock %}

{% block javascript %} 
<script type="text/javascript">

Ext.Loader.setConfig({
    enabled: true
});

Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
]);

Ext.onReady(function(){
    Ext.define('lab1', {
        extend: 'Ext.data.Model',
        fields: [
            {name: 'xreal', type: 'float'},
            {name: 'xint', type: 'int'},
            {name: 'xbin', type: 'string'},
            {name: 'eval_func', type: 'float'}
         ]
    });

    // Array data for the grids
    {% autoescape false %}
    Ext.grid.dummyData = {{ resultsInJson }};
    {% endautoescape %}

    var getLocalStore = function() {
        return Ext.create('Ext.data.ArrayStore', {
            model: 'lab1',
            data: Ext.grid.dummyData
        });
    };

    var grid3 = Ext.create('Ext.grid.Panel', {
        store: getLocalStore(),
        columns: [
            Ext.create('Ext.grid.RowNumberer'),
            {text: "x-real", width: 120, sortable: true, dataIndex: 'xreal'},
            {text: "x-int", width: 120, sortable: true, dataIndex: 'xint'},
            {text: "x-bin", width: 120, sortable: true, dataIndex: 'xbin'},
            {text: "f(x-real)", width: 120, sortable: true, dataIndex: 'eval_func'}
        ],
        columnLines: true,
        height:300,
        title:'Wartość populacji',
        iconCls:'icon-grid',
        renderTo: Ext.getBody()
    });
});

    </script>
{% endblock %}
